@page "/calculator"

@using DcaCalculator.Application.Features.Queries.GetDcaResults
@using DcaCalculator.WebUI.Data
@using MediatR
@inject UserSelectionService UserSelectionService
@inject IMediator Mediator


<h3>Calculator</h3>
Selected Coins for DCA: @UserSelectionService.Property

<div class="form-group w-25">
    <div class="row mb-2">
        <div class="col">
            <h3>Start date</h3>
            <input type="date" class="form-control" @bind="startDate" />
        </div>
    </div>
    <div class="row mb-2">
        <div class="col">
            <h3>Monthly Investment</h3>
            <input type="number" class="form-control" placeholder="Amount Invested" @bind="investment" />
        </div>
    </div>
    <div class="row mb-3">
        <div class="col">
            <button class="btn btn-success" @onclick="Calculate">Calculate DCA</button>
        </div>
    </div>
</div>
<div class="w-50">
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Investment amount</th>
                <th>Value</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var crypto in cryptocurrencies)
            {
                <tr>
                    <td>@crypto.Date</td>
                    <td>@crypto.InvestedAmount</td>
                    <td>
                        @foreach (var coin in crypto.InvestedCoins)
                        {
                            string.Format("{0} - {1}", @coin.Key, @coin.Value);
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private DateTime startDate;
    private double investment;
    private List<GetDcaResultsDto> cryptocurrencies;

    protected override void OnInitialized()
    {
        startDate = DateTime.Now;
        cryptocurrencies = new List<GetDcaResultsDto>();
    }

    public async Task Calculate()
    {
        cryptocurrencies = await Mediator.Send(new GetDcaResultsQuery(startDate, investment, UserSelectionService.Property));
    }
}
