@page "/calculator"

@using DcaCalculator.Application.Features.Queries.GetDcaResults
@using DcaCalculator.WebUI.Data
@using MediatR
@inject UserSelectionService UserSelectionService
@inject IMediator Mediator


<h3>Calculator</h3>
Selected Coins for DCA: @UserSelectionService.Symbols

<div class="form-group w-25">
    <div class="row mb-2">
        <div class="col">
            <h3>Start date</h3>
            <input type="date" class="form-control" @bind="startDate" />
        </div>
    </div>
    <div class="row mb-2">
        <div class="col">
            <h3>Monthly Investment</h3>
            <input type="number" class="form-control" placeholder="Amount Invested" @bind="investment" />
        </div>
    </div>
    <div class="row mb-3">
        <div class="col">
            <button class="btn btn-success" @onclick="Calculate">Calculate DCA</button>
        </div>
    </div>
</div>
<div class="w-50">
    @if (resultsQuery != null)
    {
        <h3>Results</h3>
        @foreach(var coin in resultsQuery.Total.AcumulatedCoins)
        {
            <p>@coin.Key - @coin.Value.Amount.ToString("N9") - USD - @coin.Value.UsdAmount.ToString("C", new System.Globalization.CultureInfo("en-US"))</p>
        }

        <p>Invested Amount: @resultsQuery.Total.InvestedAmount.ToString("C", new System.Globalization.CultureInfo("en-US"))</p>
        <p>Current Value: @resultsQuery.Total.UsdValue.ToString("C", new System.Globalization.CultureInfo("en-US"))</p>
        <p>ROI: @resultsQuery.Total.ROI.ToString("N9") %</p>
    }
</div>
<div class="w-50">
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Investment amount</th>
                <th>Symbol</th>
                <th>Price</th>
                <th>Value</th>
            </tr>
        </thead>
        <tbody>
            @if (resultsQuery != null)
            {
                @foreach (var crypto in cryptocurrencies)
                {
                    <tr>
                        <td>@crypto.Date</td>
                        <td>@crypto.InvestedAmount</td>
                        <td>@crypto.InvestedCoin.Symbol</td>
                        <td>@crypto.Price.ToString("C", new System.Globalization.CultureInfo("en-US"))</td>
                        <td>
                            @crypto.InvestedCoin.Amount.ToString("N9")
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {
    private DateTime startDate;
    private double investment;
    private List<DcaResultsDto> cryptocurrencies;
    private GetDcaResultsDto resultsQuery;

    protected override void OnInitialized()
    {
        startDate = DateTime.Now;
        cryptocurrencies = new List<DcaResultsDto>();
    }

    public async Task Calculate()
    {
        resultsQuery = await Mediator.Send(new GetDcaResultsQuery(startDate, investment, UserSelectionService.Identifiers));
        cryptocurrencies = resultsQuery.Table;
    }
}
